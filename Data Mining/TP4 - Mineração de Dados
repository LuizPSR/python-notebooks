{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ejt7AHPf6KOhGLLbWSKVz_Gf7Lp7Xisw","timestamp":1695055383882},{"file_id":"15DF_zLW_DMIKK-EZtIeQeBSQz0ec-3R2","timestamp":1663694548932}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Proposta de Trabalho 3 - Mineração de dados**\n","\n","### **Professor:** Wagner Meira Jr.\n","### **Aluno:** Luiz Paulo Santos Ribeiro\n","### **Matrícula:** 2020006409\n","\n","\n","### **Tema:** Dinâmicas Socioeconômicas\n","### **Base de dados:** https://archive.ics.uci.edu/dataset/2/adult\n"],"metadata":{"id":"2z-yJF6TObCw"}},{"cell_type":"code","source":["#Bibliotecas usadas no projeto\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report"],"metadata":{"id":"EK8yf-vgJqkL","executionInfo":{"status":"ok","timestamp":1702392799133,"user_tz":180,"elapsed":1643,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["## **1. Introdução**"],"metadata":{"id":"sCmxEZ_oVBpO"}},{"cell_type":"markdown","source":["A mineração de dados desempenha um papel fundamental na extração de informações valiosas a partir de grandes conjuntos de dados. Neste projeto, exploraremos o uso de algoritmos de classificação, mais especificamente o algoritmo de árvore de decisão, para criar predições com base nos dados demográficos. O objetivo principal é prever a renda de um indivíduo, diferenciando entre alta e baixa renda, usando técnicas de aprendizado não supervisionado.\n","\n"],"metadata":{"id":"sWgoX9aCeYHp"}},{"cell_type":"markdown","source":["### Motivação\n","A classificação de renda é uma tarefa fundamental em diversas áreas, incluindo instituições financeiras, órgãos governamentais e empresas de marketing. Compreender a relação entre características demográficas e a renda de uma pessoa é essencial para tomada de decisões eficazes, adaptação de estratégias de negócios e políticas públicas. A utilização de algoritmos de regressão, como a regressão logística, podem revelar padrões ocultos nos dados demográficos que podem ser explorados para identificar grupos de alta e baixa renda."],"metadata":{"id":"xeqeduesVXLY"}},{"cell_type":"markdown","source":["###Objetivos\n","Desenvolver um modelo de classificação baseado em regressão logistica para classificar indivíduos com base em informações demográficas e prever sua renda.\n","\n","Mais especificamente, nossos critérios de sucesso estarão relacionados à precisão do modelo, com uma métrica de avaliação de desempenho que busca uma acurácia superior a 80% na previsão de classificação de renda."],"metadata":{"id":"04hktPZAVXdX"}},{"cell_type":"markdown","source":["###Metodologia\n","\n","A metodologia deste projeto é inspirada no CRISP-DM (Cross-Industry Standard Process for Data Mining), que é um processo amplamente utilizado em projetos de mineração de dados. As etapas do projeto incluem:\n","\n","1. **Entendimento do Negócio**: Definir o contexto e a relevância da tarefa de classificação de renda com base em dados demográficos, e identificar as necessidades e requisitos dos stakeholders.\n","2. **Entendimento dos Dados**: Coletar os dados demográficos, incluindo idade, ocupação, raça, sexo, estado civil, entre outros, de fontes confiáveis, explorar e visualizar os dados para entender suas características e distribuições.\n","3. **Pré-processamento dos Dados**: Limpar os dados, tratando valores ausentes e possíveis outliers, normalizar variáveis numéricas, codificar variáveis categóricas e selecionar as características relevantes para a modelagem. Nessa etapa iremos também escolher quais atributos serão usados na regressão.\n","4. **Modelagem**: Aplicar o algoritmo de regressão logística para identificar as decisões que nos levam a uma maior certeza de que uma dada entrada pertence ao grupo de renda alta ou baixa.\n","5. **Avaliação**: Avaliar a acurácia do modelo, assim como sua taxa de precisão, recall, e f1."],"metadata":{"id":"hXqTpMsRfzT6"}},{"cell_type":"markdown","source":["##**2. Data understanding (Entendimento dos dados)**\n","\n"],"metadata":{"id":"ckPkUM8AJeMl"}},{"cell_type":"markdown","source":["Dados oriundos do censo americano de 1994, mostrando uma serie de dados de individuos adultos e economicamente ativos, e dividido entre os que ganham acima e até 50 mil dolares. Esse valor representa cerca de 50% acima da renda mediana na época e em valores atuais equivaleria a 100 mil dolares anuais."],"metadata":{"id":"HhQY7UIyr3c2"}},{"cell_type":"code","source":["#Carregando a base de dados\n","adult = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data', header = None)\n","adult.columns = ['age', 'workclass', 'fnlwgt', 'education', 'education_level',\n","                 'marital_status', 'occupation', 'relationship', 'race', 'sex',\n","                 'capital_gain', 'capital_loss', 'hours', 'nationality',\n","                 'income']"],"metadata":{"id":"j1fDgQ9gJ1EV","executionInfo":{"status":"ok","timestamp":1702392800200,"user_tz":180,"elapsed":1071,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["display(adult)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"uTFH6rHzqXi3","executionInfo":{"status":"ok","timestamp":1702392800201,"user_tz":180,"elapsed":8,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"f484b983-1862-450a-a504-8c24603592d0"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["       age          workclass  fnlwgt    education  education_level  \\\n","0       39          State-gov   77516    Bachelors               13   \n","1       50   Self-emp-not-inc   83311    Bachelors               13   \n","2       38            Private  215646      HS-grad                9   \n","3       53            Private  234721         11th                7   \n","4       28            Private  338409    Bachelors               13   \n","...    ...                ...     ...          ...              ...   \n","32556   27            Private  257302   Assoc-acdm               12   \n","32557   40            Private  154374      HS-grad                9   \n","32558   58            Private  151910      HS-grad                9   \n","32559   22            Private  201490      HS-grad                9   \n","32560   52       Self-emp-inc  287927      HS-grad                9   \n","\n","            marital_status          occupation    relationship    race  \\\n","0            Never-married        Adm-clerical   Not-in-family   White   \n","1       Married-civ-spouse     Exec-managerial         Husband   White   \n","2                 Divorced   Handlers-cleaners   Not-in-family   White   \n","3       Married-civ-spouse   Handlers-cleaners         Husband   Black   \n","4       Married-civ-spouse      Prof-specialty            Wife   Black   \n","...                    ...                 ...             ...     ...   \n","32556   Married-civ-spouse        Tech-support            Wife   White   \n","32557   Married-civ-spouse   Machine-op-inspct         Husband   White   \n","32558              Widowed        Adm-clerical       Unmarried   White   \n","32559        Never-married        Adm-clerical       Own-child   White   \n","32560   Married-civ-spouse     Exec-managerial            Wife   White   \n","\n","           sex  capital_gain  capital_loss  hours     nationality  income  \n","0         Male          2174             0     40   United-States   <=50K  \n","1         Male             0             0     13   United-States   <=50K  \n","2         Male             0             0     40   United-States   <=50K  \n","3         Male             0             0     40   United-States   <=50K  \n","4       Female             0             0     40            Cuba   <=50K  \n","...        ...           ...           ...    ...             ...     ...  \n","32556   Female             0             0     38   United-States   <=50K  \n","32557     Male             0             0     40   United-States    >50K  \n","32558   Female             0             0     40   United-States   <=50K  \n","32559     Male             0             0     20   United-States   <=50K  \n","32560   Female         15024             0     40   United-States    >50K  \n","\n","[32561 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-b905ac76-21f5-41c5-b4fd-708ef9c0d225\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>education</th>\n","      <th>education_level</th>\n","      <th>marital_status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours</th>\n","      <th>nationality</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>77516</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>2174</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>83311</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>215646</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>234721</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Private</td>\n","      <td>338409</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>32556</th>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>257302</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>32557</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>154374</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>32558</th>\n","      <td>58</td>\n","      <td>Private</td>\n","      <td>151910</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>32559</th>\n","      <td>22</td>\n","      <td>Private</td>\n","      <td>201490</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>32560</th>\n","      <td>52</td>\n","      <td>Self-emp-inc</td>\n","      <td>287927</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>32561 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b905ac76-21f5-41c5-b4fd-708ef9c0d225')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b905ac76-21f5-41c5-b4fd-708ef9c0d225 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b905ac76-21f5-41c5-b4fd-708ef9c0d225');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a8168fae-122f-4861-935d-de949c7398e5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8168fae-122f-4861-935d-de949c7398e5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a8168fae-122f-4861-935d-de949c7398e5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}}]},{"cell_type":"code","source":["display(adult.info())\n","display(adult.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":746},"id":"0TeVbmj0gkF1","executionInfo":{"status":"ok","timestamp":1702392800201,"user_tz":180,"elapsed":7,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"5b0dd634-4c4d-444c-9d20-47602ab4644f"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 32561 entries, 0 to 32560\n","Data columns (total 15 columns):\n"," #   Column           Non-Null Count  Dtype \n","---  ------           --------------  ----- \n"," 0   age              32561 non-null  int64 \n"," 1   workclass        32561 non-null  object\n"," 2   fnlwgt           32561 non-null  int64 \n"," 3   education        32561 non-null  object\n"," 4   education_level  32561 non-null  int64 \n"," 5   marital_status   32561 non-null  object\n"," 6   occupation       32561 non-null  object\n"," 7   relationship     32561 non-null  object\n"," 8   race             32561 non-null  object\n"," 9   sex              32561 non-null  object\n"," 10  capital_gain     32561 non-null  int64 \n"," 11  capital_loss     32561 non-null  int64 \n"," 12  hours            32561 non-null  int64 \n"," 13  nationality      32561 non-null  object\n"," 14  income           32561 non-null  object\n","dtypes: int64(6), object(9)\n","memory usage: 3.7+ MB\n"]},{"output_type":"display_data","data":{"text/plain":["None"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["                age        fnlwgt  education_level  capital_gain  \\\n","count  32561.000000  3.256100e+04     32561.000000  32561.000000   \n","mean      38.581647  1.897784e+05        10.080679   1077.648844   \n","std       13.640433  1.055500e+05         2.572720   7385.292085   \n","min       17.000000  1.228500e+04         1.000000      0.000000   \n","25%       28.000000  1.178270e+05         9.000000      0.000000   \n","50%       37.000000  1.783560e+05        10.000000      0.000000   \n","75%       48.000000  2.370510e+05        12.000000      0.000000   \n","max       90.000000  1.484705e+06        16.000000  99999.000000   \n","\n","       capital_loss         hours  \n","count  32561.000000  32561.000000  \n","mean      87.303830     40.437456  \n","std      402.960219     12.347429  \n","min        0.000000      1.000000  \n","25%        0.000000     40.000000  \n","50%        0.000000     40.000000  \n","75%        0.000000     45.000000  \n","max     4356.000000     99.000000  "],"text/html":["\n","  <div id=\"df-314c09a2-b6b5-4886-ad4c-dcbc06c5d722\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>fnlwgt</th>\n","      <th>education_level</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>32561.000000</td>\n","      <td>3.256100e+04</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>38.581647</td>\n","      <td>1.897784e+05</td>\n","      <td>10.080679</td>\n","      <td>1077.648844</td>\n","      <td>87.303830</td>\n","      <td>40.437456</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.640433</td>\n","      <td>1.055500e+05</td>\n","      <td>2.572720</td>\n","      <td>7385.292085</td>\n","      <td>402.960219</td>\n","      <td>12.347429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17.000000</td>\n","      <td>1.228500e+04</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.000000</td>\n","      <td>1.178270e+05</td>\n","      <td>9.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>37.000000</td>\n","      <td>1.783560e+05</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.000000</td>\n","      <td>2.370510e+05</td>\n","      <td>12.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>45.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>90.000000</td>\n","      <td>1.484705e+06</td>\n","      <td>16.000000</td>\n","      <td>99999.000000</td>\n","      <td>4356.000000</td>\n","      <td>99.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-314c09a2-b6b5-4886-ad4c-dcbc06c5d722')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-314c09a2-b6b5-4886-ad4c-dcbc06c5d722 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-314c09a2-b6b5-4886-ad4c-dcbc06c5d722');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-962a3902-ef30-4c77-88b0-22258a54f9ac\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-962a3902-ef30-4c77-88b0-22258a54f9ac')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-962a3902-ef30-4c77-88b0-22258a54f9ac button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}}]},{"cell_type":"code","source":["for c in adult.columns:\n","  print('========================================')\n","  print(f'========= {c.center(20)} =========')\n","  print('========================================')\n","  print(f'{adult[c].value_counts()}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TvBvqMkghMz9","executionInfo":{"status":"ok","timestamp":1702392800201,"user_tz":180,"elapsed":5,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"7a19ecc0-1b70-4391-9dda-4f9f30024def"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["========================================\n","=========         age          =========\n","========================================\n","36    898\n","31    888\n","34    886\n","23    877\n","35    876\n","     ... \n","83      6\n","88      3\n","85      3\n","86      1\n","87      1\n","Name: age, Length: 73, dtype: int64\n","========================================\n","=========      workclass       =========\n","========================================\n"," Private             22696\n"," Self-emp-not-inc     2541\n"," Local-gov            2093\n"," ?                    1836\n"," State-gov            1298\n"," Self-emp-inc         1116\n"," Federal-gov           960\n"," Without-pay            14\n"," Never-worked            7\n","Name: workclass, dtype: int64\n","========================================\n","=========        fnlwgt        =========\n","========================================\n","164190    13\n","203488    13\n","123011    13\n","148995    12\n","121124    12\n","          ..\n","232784     1\n","325573     1\n","140176     1\n","318264     1\n","257302     1\n","Name: fnlwgt, Length: 21648, dtype: int64\n","========================================\n","=========      education       =========\n","========================================\n"," HS-grad         10501\n"," Some-college     7291\n"," Bachelors        5355\n"," Masters          1723\n"," Assoc-voc        1382\n"," 11th             1175\n"," Assoc-acdm       1067\n"," 10th              933\n"," 7th-8th           646\n"," Prof-school       576\n"," 9th               514\n"," 12th              433\n"," Doctorate         413\n"," 5th-6th           333\n"," 1st-4th           168\n"," Preschool          51\n","Name: education, dtype: int64\n","========================================\n","=========   education_level    =========\n","========================================\n","9     10501\n","10     7291\n","13     5355\n","14     1723\n","11     1382\n","7      1175\n","12     1067\n","6       933\n","4       646\n","15      576\n","5       514\n","8       433\n","16      413\n","3       333\n","2       168\n","1        51\n","Name: education_level, dtype: int64\n","========================================\n","=========    marital_status    =========\n","========================================\n"," Married-civ-spouse       14976\n"," Never-married            10683\n"," Divorced                  4443\n"," Separated                 1025\n"," Widowed                    993\n"," Married-spouse-absent      418\n"," Married-AF-spouse           23\n","Name: marital_status, dtype: int64\n","========================================\n","=========      occupation      =========\n","========================================\n"," Prof-specialty       4140\n"," Craft-repair         4099\n"," Exec-managerial      4066\n"," Adm-clerical         3770\n"," Sales                3650\n"," Other-service        3295\n"," Machine-op-inspct    2002\n"," ?                    1843\n"," Transport-moving     1597\n"," Handlers-cleaners    1370\n"," Farming-fishing       994\n"," Tech-support          928\n"," Protective-serv       649\n"," Priv-house-serv       149\n"," Armed-Forces            9\n","Name: occupation, dtype: int64\n","========================================\n","=========     relationship     =========\n","========================================\n"," Husband           13193\n"," Not-in-family      8305\n"," Own-child          5068\n"," Unmarried          3446\n"," Wife               1568\n"," Other-relative      981\n","Name: relationship, dtype: int64\n","========================================\n","=========         race         =========\n","========================================\n"," White                 27816\n"," Black                  3124\n"," Asian-Pac-Islander     1039\n"," Amer-Indian-Eskimo      311\n"," Other                   271\n","Name: race, dtype: int64\n","========================================\n","=========         sex          =========\n","========================================\n"," Male      21790\n"," Female    10771\n","Name: sex, dtype: int64\n","========================================\n","=========     capital_gain     =========\n","========================================\n","0        29849\n","15024      347\n","7688       284\n","7298       246\n","99999      159\n","         ...  \n","1111         1\n","2538         1\n","22040        1\n","4931         1\n","5060         1\n","Name: capital_gain, Length: 119, dtype: int64\n","========================================\n","=========     capital_loss     =========\n","========================================\n","0       31042\n","1902      202\n","1977      168\n","1887      159\n","1848       51\n","        ...  \n","2080        1\n","1539        1\n","1844        1\n","2489        1\n","1411        1\n","Name: capital_loss, Length: 92, dtype: int64\n","========================================\n","=========        hours         =========\n","========================================\n","40    15217\n","50     2819\n","45     1824\n","60     1475\n","35     1297\n","      ...  \n","82        1\n","92        1\n","87        1\n","74        1\n","94        1\n","Name: hours, Length: 94, dtype: int64\n","========================================\n","=========     nationality      =========\n","========================================\n"," United-States                 29170\n"," Mexico                          643\n"," ?                               583\n"," Philippines                     198\n"," Germany                         137\n"," Canada                          121\n"," Puerto-Rico                     114\n"," El-Salvador                     106\n"," India                           100\n"," Cuba                             95\n"," England                          90\n"," Jamaica                          81\n"," South                            80\n"," China                            75\n"," Italy                            73\n"," Dominican-Republic               70\n"," Vietnam                          67\n"," Guatemala                        64\n"," Japan                            62\n"," Poland                           60\n"," Columbia                         59\n"," Taiwan                           51\n"," Haiti                            44\n"," Iran                             43\n"," Portugal                         37\n"," Nicaragua                        34\n"," Peru                             31\n"," France                           29\n"," Greece                           29\n"," Ecuador                          28\n"," Ireland                          24\n"," Hong                             20\n"," Cambodia                         19\n"," Trinadad&Tobago                  19\n"," Laos                             18\n"," Thailand                         18\n"," Yugoslavia                       16\n"," Outlying-US(Guam-USVI-etc)       14\n"," Honduras                         13\n"," Hungary                          13\n"," Scotland                         12\n"," Holand-Netherlands                1\n","Name: nationality, dtype: int64\n","========================================\n","=========        income        =========\n","========================================\n"," <=50K    24720\n"," >50K      7841\n","Name: income, dtype: int64\n"]}]},{"cell_type":"markdown","source":["##**3. Data preparation (Preparação dos dados)**"],"metadata":{"id":"YBK0Ro38J8kF"}},{"cell_type":"markdown","source":["Primeiro verificamos a existencia de valores faltando"],"metadata":{"id":"y-xJKnE5g61c"}},{"cell_type":"code","source":["# Verificando se há elementos faltando\n","print(adult.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WDfpOpZexse7","executionInfo":{"status":"ok","timestamp":1702392800652,"user_tz":180,"elapsed":4,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"06a88629-d596-4f82-a390-5de45bf4628a"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["age                0\n","workclass          0\n","fnlwgt             0\n","education          0\n","education_level    0\n","marital_status     0\n","occupation         0\n","relationship       0\n","race               0\n","sex                0\n","capital_gain       0\n","capital_loss       0\n","hours              0\n","nationality        0\n","income             0\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["Agora iremos remover a coluna relationship e education, já que a analise oferecida por civil-status e education-level é similar e mais expressiva na análise. fnlwgt também será removido por não ser relevante.\n","\n","Devido ao numero muito concentrado de valores em certos atributos categoricos, transformaremos nationality e race em atributos binários."],"metadata":{"id":"yRfwA2g6r0iE"}},{"cell_type":"code","source":["# CODIGO MANUAL\n","\n","def nationality_binary(nationality):\n","  if nationality == ' United-States':\n","    return 0\n","  else:\n","    return 1\n","\n","def race_binary(race):\n","  if race == ' White':\n","    return 0\n","  else:\n","    return 1\n","\n","def sex_binary(sex):\n","  if sex == ' Female':\n","    return 0\n","  else:\n","    return 1\n","\n","def income_binary(income):\n","  if income == ' <=50K':\n","    return 0\n","  else:\n","    return 1\n","\n","adult = adult.drop(columns=['education', 'relationship', 'fnlwgt'])\n","\n","adult['nationality'] = adult['nationality'].apply(nationality_binary)\n","adult['race'] = adult['race'].apply(race_binary)\n","adult['sex'] = adult['sex'].apply(sex_binary)\n","adult['income'] = adult['income'].apply(income_binary)\n","\n","print(adult.head())"],"metadata":{"id":"wFoy3FW8ljKt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702392800652,"user_tz":180,"elapsed":3,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"3e621d62-0b1c-4c3a-df1e-a3926682375d"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["   age          workclass  education_level       marital_status  \\\n","0   39          State-gov               13        Never-married   \n","1   50   Self-emp-not-inc               13   Married-civ-spouse   \n","2   38            Private                9             Divorced   \n","3   53            Private                7   Married-civ-spouse   \n","4   28            Private               13   Married-civ-spouse   \n","\n","           occupation  race  sex  capital_gain  capital_loss  hours  \\\n","0        Adm-clerical     0    1          2174             0     40   \n","1     Exec-managerial     0    1             0             0     13   \n","2   Handlers-cleaners     0    1             0             0     40   \n","3   Handlers-cleaners     1    1             0             0     40   \n","4      Prof-specialty     1    0             0             0     40   \n","\n","   nationality  income  \n","0            0       0  \n","1            0       0  \n","2            0       0  \n","3            0       0  \n","4            1       0  \n"]}]},{"cell_type":"markdown","source":["Agora, tratamos dos atributos categóricos restantes. Como apenas nos interessa a relação com renda, substituiremos cada categoria por sua fração de alta renda, permitindo que o vies de renda de cada categoria seja expresso regressão."],"metadata":{"id":"j4OVj0e18Lae"}},{"cell_type":"code","source":["# List of categorical columns\n","categorical_columns = ['workclass', 'marital_status', 'occupation']\n","\n","# Function to calculate the fraction of high income for each category\n","def calculate_fraction(column):\n","    fraction_dict = {}\n","    for category in adult[column].unique():\n","        total_count = adult[adult[column] == category].shape[0]\n","        high_income_count = adult[(adult[column] == category) & (adult['income'] == 1)].shape[0]\n","        fraction = high_income_count / total_count if total_count > 0 else 0\n","        fraction_dict[category] = fraction\n","    return fraction_dict\n","\n","# Update categorical columns with the fraction of high income for each category\n","for column in categorical_columns:\n","    fraction_dict = calculate_fraction(column)\n","    adult[column] = adult[column].map(fraction_dict)\n","\n","# Display the updated dataframe\n","print(adult.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jjcE3hrKnHi8","executionInfo":{"status":"ok","timestamp":1702392800652,"user_tz":180,"elapsed":2,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"f7166417-7b7b-4c6b-9da5-e31064948da6"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["   age  workclass  education_level  marital_status  occupation  race  sex  \\\n","0   39   0.271957               13        0.045961    0.134483     0    1   \n","1   50   0.284927               13        0.446848    0.484014     0    1   \n","2   38   0.218673                9        0.104209    0.062774     0    1   \n","3   53   0.218673                7        0.446848    0.062774     1    1   \n","4   28   0.218673               13        0.446848    0.449034     1    0   \n","\n","   capital_gain  capital_loss  hours  nationality  income  \n","0          2174             0     40            0       0  \n","1             0             0     13            0       0  \n","2             0             0     40            0       0  \n","3             0             0     40            0       0  \n","4             0             0     40            1       0  \n"]}]},{"cell_type":"markdown","source":["Agora verificamos a correlação correlação de cada atributo com a renda do indivíduo. Iremos manter apenas os atributos que possuem correlação com a renda acima de 0.2"],"metadata":{"id":"Ifs5ps029Yox"}},{"cell_type":"code","source":["# Correlação entre variáveis\n","correlation_matrix = adult.corr()\n","sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n","plt.title('Matriz de Correlação')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":547},"id":"5OWeqsuxkUcD","executionInfo":{"status":"ok","timestamp":1702392802086,"user_tz":180,"elapsed":1435,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"43d7974b-c8dc-46de-8e0a-a9c516edab52"},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["adult = adult.drop(columns=['workclass','race','capital_loss','nationality'])\n","display(adult)"],"metadata":{"id":"zfo1D18BOXzl","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1702392802087,"user_tz":180,"elapsed":7,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"42813a01-0fba-4a52-99c9-462ecf9e2fdc"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["       age  education_level  marital_status  occupation  sex  capital_gain  \\\n","0       39               13        0.045961    0.134483    1          2174   \n","1       50               13        0.446848    0.484014    1             0   \n","2       38                9        0.104209    0.062774    1             0   \n","3       53                7        0.446848    0.062774    1             0   \n","4       28               13        0.446848    0.449034    0             0   \n","...    ...              ...             ...         ...  ...           ...   \n","32556   27               12        0.446848    0.304957    0             0   \n","32557   40                9        0.446848    0.124875    1             0   \n","32558   58                9        0.085599    0.134483    0             0   \n","32559   22                9        0.045961    0.134483    1             0   \n","32560   52                9        0.446848    0.484014    0         15024   \n","\n","       hours  income  \n","0         40       0  \n","1         13       0  \n","2         40       0  \n","3         40       0  \n","4         40       0  \n","...      ...     ...  \n","32556     38       0  \n","32557     40       1  \n","32558     40       0  \n","32559     20       0  \n","32560     40       1  \n","\n","[32561 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-8fec1ac8-5a1c-4c51-aff5-d7c158d6777a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education_level</th>\n","      <th>marital_status</th>\n","      <th>occupation</th>\n","      <th>sex</th>\n","      <th>capital_gain</th>\n","      <th>hours</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>13</td>\n","      <td>0.045961</td>\n","      <td>0.134483</td>\n","      <td>1</td>\n","      <td>2174</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>13</td>\n","      <td>0.446848</td>\n","      <td>0.484014</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>9</td>\n","      <td>0.104209</td>\n","      <td>0.062774</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>7</td>\n","      <td>0.446848</td>\n","      <td>0.062774</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>13</td>\n","      <td>0.446848</td>\n","      <td>0.449034</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>32556</th>\n","      <td>27</td>\n","      <td>12</td>\n","      <td>0.446848</td>\n","      <td>0.304957</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>32557</th>\n","      <td>40</td>\n","      <td>9</td>\n","      <td>0.446848</td>\n","      <td>0.124875</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>32558</th>\n","      <td>58</td>\n","      <td>9</td>\n","      <td>0.085599</td>\n","      <td>0.134483</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>32559</th>\n","      <td>22</td>\n","      <td>9</td>\n","      <td>0.045961</td>\n","      <td>0.134483</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>32560</th>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>0.446848</td>\n","      <td>0.484014</td>\n","      <td>0</td>\n","      <td>15024</td>\n","      <td>40</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>32561 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fec1ac8-5a1c-4c51-aff5-d7c158d6777a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8fec1ac8-5a1c-4c51-aff5-d7c158d6777a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8fec1ac8-5a1c-4c51-aff5-d7c158d6777a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-24d25cfc-0a9a-477f-be1d-4e9257c52a37\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24d25cfc-0a9a-477f-be1d-4e9257c52a37')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-24d25cfc-0a9a-477f-be1d-4e9257c52a37 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}}]},{"cell_type":"code","source":["adult.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"Cny8DLV01N6F","executionInfo":{"status":"ok","timestamp":1702392802087,"user_tz":180,"elapsed":6,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"e668e189-3faf-4cee-c577-29228830eb8d"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                age  education_level  marital_status    occupation  \\\n","count  32561.000000     32561.000000    32561.000000  32561.000000   \n","mean      38.581647        10.080679        0.240810      0.240810   \n","std       13.640433         2.572720        0.191302      0.150463   \n","min       17.000000         1.000000        0.045961      0.006711   \n","25%       28.000000         9.000000        0.045961      0.124875   \n","50%       37.000000        10.000000        0.104209      0.226641   \n","75%       48.000000        12.000000        0.446848      0.449034   \n","max       90.000000        16.000000        0.446848      0.484014   \n","\n","                sex  capital_gain         hours        income  \n","count  32561.000000  32561.000000  32561.000000  32561.000000  \n","mean       0.669205   1077.648844     40.437456      0.240810  \n","std        0.470506   7385.292085     12.347429      0.427581  \n","min        0.000000      0.000000      1.000000      0.000000  \n","25%        0.000000      0.000000     40.000000      0.000000  \n","50%        1.000000      0.000000     40.000000      0.000000  \n","75%        1.000000      0.000000     45.000000      0.000000  \n","max        1.000000  99999.000000     99.000000      1.000000  "],"text/html":["\n","  <div id=\"df-e49645b8-df32-4af1-a1ad-7ed5c98703ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education_level</th>\n","      <th>marital_status</th>\n","      <th>occupation</th>\n","      <th>sex</th>\n","      <th>capital_gain</th>\n","      <th>hours</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>38.581647</td>\n","      <td>10.080679</td>\n","      <td>0.240810</td>\n","      <td>0.240810</td>\n","      <td>0.669205</td>\n","      <td>1077.648844</td>\n","      <td>40.437456</td>\n","      <td>0.240810</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.640433</td>\n","      <td>2.572720</td>\n","      <td>0.191302</td>\n","      <td>0.150463</td>\n","      <td>0.470506</td>\n","      <td>7385.292085</td>\n","      <td>12.347429</td>\n","      <td>0.427581</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17.000000</td>\n","      <td>1.000000</td>\n","      <td>0.045961</td>\n","      <td>0.006711</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.000000</td>\n","      <td>9.000000</td>\n","      <td>0.045961</td>\n","      <td>0.124875</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>37.000000</td>\n","      <td>10.000000</td>\n","      <td>0.104209</td>\n","      <td>0.226641</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.000000</td>\n","      <td>12.000000</td>\n","      <td>0.446848</td>\n","      <td>0.449034</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>45.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>90.000000</td>\n","      <td>16.000000</td>\n","      <td>0.446848</td>\n","      <td>0.484014</td>\n","      <td>1.000000</td>\n","      <td>99999.000000</td>\n","      <td>99.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e49645b8-df32-4af1-a1ad-7ed5c98703ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e49645b8-df32-4af1-a1ad-7ed5c98703ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e49645b8-df32-4af1-a1ad-7ed5c98703ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-486028fa-afa1-47b4-a8ea-9e85d0c4d6ec\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-486028fa-afa1-47b4-a8ea-9e85d0c4d6ec')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-486028fa-afa1-47b4-a8ea-9e85d0c4d6ec button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["##**4. Modeling (Modelagem)**"],"metadata":{"id":"AjlBKt3FKJhA"}},{"cell_type":"markdown","source":["Agora treinamos nosso modelo"],"metadata":{"id":"NeNVrpC4-wLb"}},{"cell_type":"code","source":["# Define the features (X) and target variable (y)\n","X = adult.drop(['income'], axis=1)  # Assuming 'income' is the target variable\n","y = adult['income']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Initialize the logistic regression model\n","model = LogisticRegression()\n","\n","# Fit the model to the training data\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":230},"id":"gJT9SNJX5FaW","executionInfo":{"status":"ok","timestamp":1702392802477,"user_tz":180,"elapsed":395,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"6b0268cc-e35e-413c-a313-5fefc3d0e9bb"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["##**5. Evaluation (Validação)**\n"],"metadata":{"id":"F1UAOjMXMfrg"}},{"cell_type":"markdown","source":["Finalmente, avaliamos a performance atingida pelo modelo segundo os parâmetros previamente discutidos."],"metadata":{"id":"gbLyd9kzZn58"}},{"cell_type":"code","source":["# Make predictions on the test set\n","predictions = model.predict(X_test)\n","\n","# Evaluate the model\n","accuracy = accuracy_score(y_test, predictions)\n","conf_matrix = confusion_matrix(y_test, predictions)\n","classification_rep = classification_report(y_test, predictions)\n","\n","# Print the evaluation metrics\n","print(f'Accuracy: {accuracy:27}')\n","print(f'Classification Report:\\n{classification_rep}')"],"metadata":{"id":"zc2qNY_P8n9k","executionInfo":{"status":"ok","timestamp":1702392802478,"user_tz":180,"elapsed":18,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e76b4954-4e9e-45b8-b2c3-3c2ba0d18fb8"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:          0.8366344234607708\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.84      0.97      0.90      4942\n","           1       0.80      0.43      0.56      1571\n","\n","    accuracy                           0.84      6513\n","   macro avg       0.82      0.70      0.73      6513\n","weighted avg       0.83      0.84      0.82      6513\n","\n"]}]},{"cell_type":"markdown","source":["## Conclusão e Perspectiva\n","Como o critério de sucesso foi atingido, estipula-se que o modelo e satisfatório para o propósito definido.\n","\n","Um proximo passo seria avaliar a performance dessa modelagem quando aplicada sobre a realidade nacional atual, que naturalmente diverge consideravelmente da realidade econômica americana de 1994."],"metadata":{"id":"XllVGpChhc_p"}}]}