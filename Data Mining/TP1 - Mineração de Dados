{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ejt7AHPf6KOhGLLbWSKVz_Gf7Lp7Xisw","timestamp":1695055383882},{"file_id":"15DF_zLW_DMIKK-EZtIeQeBSQz0ec-3R2","timestamp":1663694548932}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Proposta de Trabalho 1 - Mineração de dados**\n","\n","### **Professor:** Wagner Meira Jr.\n","### **Aluno:** Luiz Paulo Santos Ribeiro\n","### **Matrícula:** 2020006409\n","\n","\n","### **Tema:** Dinâmicas Socioeconômicas\n","### **Base de dados:** https://archive.ics.uci.edu/dataset/2/adult\n"],"metadata":{"id":"2z-yJF6TObCw"}},{"cell_type":"code","source":["#Bibliotecas usadas no projeto\n","import pandas as pd\n","from itertools import combinations"],"metadata":{"id":"EK8yf-vgJqkL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##**2. Data understanding (Entendimento dos dados)**\n","\n"],"metadata":{"id":"ckPkUM8AJeMl"}},{"cell_type":"markdown","source":["Dados oriundos do censo americano de 1994, mostrando uma serie de dados de individuos adultos e economicamente ativos, e dividido entre os que ganham acima e até 50 mil dolares. Esse valor representa cerca de 50% acima da renda mediana na época e em valores atuais equivaleria a 100 mil dolares anuais.\n","\n","Com base nessa banco de dados, poderemos minerar padrões que nos ajudam a identificar grupos que se encontravam em condição economica mais favoravel que os demais, assim como grupos que se encontram subrepresentados entre os de alta renda.\n","\n","**OBSERVAÇÃO:** o arquivo usado foi carregado no runtime do notebook, logo precisa ser recarregado diretamente em caso de uma nova execução."],"metadata":{"id":"HhQY7UIyr3c2"}},{"cell_type":"code","source":["#Carregando a base de dados\n","adult = pd.read_csv('/content/adult.data', header = None)\n","adult.columns = ['age', 'workclass', 'fnlwgt', 'education', 'education_level',\n","              'marital_status', 'occupation', 'relationship', 'race', 'sex',\n","              'capital_gain', 'capital_loss', 'hours', 'nationality',\n","              'income']\n","for c in adult.columns:\n","  print(c)\n","  display(adult[c].value_counts())\n","  print()"],"metadata":{"id":"j1fDgQ9gJ1EV","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1696987075365,"user_tz":180,"elapsed":390,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"11e086ee-8b49-49b2-c68a-425d620fea40"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["age\n"]},{"output_type":"display_data","data":{"text/plain":["36    898\n","31    888\n","34    886\n","23    877\n","35    876\n","     ... \n","83      6\n","88      3\n","85      3\n","86      1\n","87      1\n","Name: age, Length: 73, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","workclass\n"]},{"output_type":"display_data","data":{"text/plain":[" Private             22696\n"," Self-emp-not-inc     2541\n"," Local-gov            2093\n"," ?                    1836\n"," State-gov            1298\n"," Self-emp-inc         1116\n"," Federal-gov           960\n"," Without-pay            14\n"," Never-worked            7\n","Name: workclass, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","fnlwgt\n"]},{"output_type":"display_data","data":{"text/plain":["164190    13\n","203488    13\n","123011    13\n","148995    12\n","121124    12\n","          ..\n","232784     1\n","325573     1\n","140176     1\n","318264     1\n","257302     1\n","Name: fnlwgt, Length: 21648, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","education\n"]},{"output_type":"display_data","data":{"text/plain":[" HS-grad         10501\n"," Some-college     7291\n"," Bachelors        5355\n"," Masters          1723\n"," Assoc-voc        1382\n"," 11th             1175\n"," Assoc-acdm       1067\n"," 10th              933\n"," 7th-8th           646\n"," Prof-school       576\n"," 9th               514\n"," 12th              433\n"," Doctorate         413\n"," 5th-6th           333\n"," 1st-4th           168\n"," Preschool          51\n","Name: education, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","education_level\n"]},{"output_type":"display_data","data":{"text/plain":["9     10501\n","10     7291\n","13     5355\n","14     1723\n","11     1382\n","7      1175\n","12     1067\n","6       933\n","4       646\n","15      576\n","5       514\n","8       433\n","16      413\n","3       333\n","2       168\n","1        51\n","Name: education_level, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","marital_status\n"]},{"output_type":"display_data","data":{"text/plain":[" Married-civ-spouse       14976\n"," Never-married            10683\n"," Divorced                  4443\n"," Separated                 1025\n"," Widowed                    993\n"," Married-spouse-absent      418\n"," Married-AF-spouse           23\n","Name: marital_status, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","occupation\n"]},{"output_type":"display_data","data":{"text/plain":[" Prof-specialty       4140\n"," Craft-repair         4099\n"," Exec-managerial      4066\n"," Adm-clerical         3770\n"," Sales                3650\n"," Other-service        3295\n"," Machine-op-inspct    2002\n"," ?                    1843\n"," Transport-moving     1597\n"," Handlers-cleaners    1370\n"," Farming-fishing       994\n"," Tech-support          928\n"," Protective-serv       649\n"," Priv-house-serv       149\n"," Armed-Forces            9\n","Name: occupation, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","relationship\n"]},{"output_type":"display_data","data":{"text/plain":[" Husband           13193\n"," Not-in-family      8305\n"," Own-child          5068\n"," Unmarried          3446\n"," Wife               1568\n"," Other-relative      981\n","Name: relationship, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","race\n"]},{"output_type":"display_data","data":{"text/plain":[" White                 27816\n"," Black                  3124\n"," Asian-Pac-Islander     1039\n"," Amer-Indian-Eskimo      311\n"," Other                   271\n","Name: race, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","sex\n"]},{"output_type":"display_data","data":{"text/plain":[" Male      21790\n"," Female    10771\n","Name: sex, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","capital_gain\n"]},{"output_type":"display_data","data":{"text/plain":["0        29849\n","15024      347\n","7688       284\n","7298       246\n","99999      159\n","         ...  \n","1111         1\n","2538         1\n","22040        1\n","4931         1\n","5060         1\n","Name: capital_gain, Length: 119, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","capital_loss\n"]},{"output_type":"display_data","data":{"text/plain":["0       31042\n","1902      202\n","1977      168\n","1887      159\n","1848       51\n","        ...  \n","2080        1\n","1539        1\n","1844        1\n","2489        1\n","1411        1\n","Name: capital_loss, Length: 92, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","hours\n"]},{"output_type":"display_data","data":{"text/plain":["40    15217\n","50     2819\n","45     1824\n","60     1475\n","35     1297\n","      ...  \n","82        1\n","92        1\n","87        1\n","74        1\n","94        1\n","Name: hours, Length: 94, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","nationality\n"]},{"output_type":"display_data","data":{"text/plain":[" United-States                 29170\n"," Mexico                          643\n"," ?                               583\n"," Philippines                     198\n"," Germany                         137\n"," Canada                          121\n"," Puerto-Rico                     114\n"," El-Salvador                     106\n"," India                           100\n"," Cuba                             95\n"," England                          90\n"," Jamaica                          81\n"," South                            80\n"," China                            75\n"," Italy                            73\n"," Dominican-Republic               70\n"," Vietnam                          67\n"," Guatemala                        64\n"," Japan                            62\n"," Poland                           60\n"," Columbia                         59\n"," Taiwan                           51\n"," Haiti                            44\n"," Iran                             43\n"," Portugal                         37\n"," Nicaragua                        34\n"," Peru                             31\n"," France                           29\n"," Greece                           29\n"," Ecuador                          28\n"," Ireland                          24\n"," Hong                             20\n"," Cambodia                         19\n"," Trinadad&Tobago                  19\n"," Laos                             18\n"," Thailand                         18\n"," Yugoslavia                       16\n"," Outlying-US(Guam-USVI-etc)       14\n"," Honduras                         13\n"," Hungary                          13\n"," Scotland                         12\n"," Holand-Netherlands                1\n","Name: nationality, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","income\n"]},{"output_type":"display_data","data":{"text/plain":[" <=50K    24720\n"," >50K      7841\n","Name: income, dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]}]},{"cell_type":"markdown","source":["Agora, como nos queremos tratar das pessoas acima da com renda significativamente acima da média, devemos notar que esse grupo é sempre infrequente por definição. Logo, nos procuramos uma frequência relativa, dada a proporção base de alta renda na população amostral."],"metadata":{"id":"OXb0w3_EqNLL"}},{"cell_type":"code","source":["x = adult['income'].value_counts()\n","base_ratio = x[1]/(x.sum())\n","print('Proporção de alta renda na população: ', round(base_ratio*100, 2), '%')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pJlAgC4KqyGz","executionInfo":{"status":"ok","timestamp":1696987075365,"user_tz":180,"elapsed":10,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"e059eafc-d4e3-43ff-de4b-6ae5a2f8e8d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Proporção de alta renda na população:  24.08 %\n"]}]},{"cell_type":"markdown","source":["Iremos tratar dessa limitação na fase de modelagem"],"metadata":{"id":"jjL5yV4DjiZH"}},{"cell_type":"markdown","source":["##**3. Data preparation (Preparação dos dados)**"],"metadata":{"id":"YBK0Ro38J8kF"}},{"cell_type":"markdown","source":["Devido ao tipo de analise sendo feita, discartaremos três colunas (*capital gain e loss*, e *fnlwgt*) consideradas pouco relevantes no contexto avaliado, dado que esses se referem diretamente a renda individual, sendo pouco interessante para a analise.\n","\n","Além disso, iremos transformar as colunas de idade e horas trabalhadas semanais, e remover *education_level* e *relationship* inteiramente, uma vez que este dado é representado de maneira suficientemente satisfatória pelas colunas *education* e *marital_status*. Por ultimo, removeremos a descriminação de paises extrangeiros e não brancos, dado que o espaço amostral é muito pequeno e pode ser melhor representado de maneira binária."],"metadata":{"id":"yRfwA2g6r0iE"}},{"cell_type":"code","source":["def age_category(age):\n","  if age < 25:\n","    return 'Young'\n","  elif age < 50:\n","    return 'Adult'\n","  else:\n","    return 'Senior'\n","\n","def hours_category(hours):\n","  if hours < 35:\n","    return 'Part-time'\n","  elif hours < 45:\n","    return 'Full-time'\n","  else:\n","    return 'Over-time'\n","\n","def nationality_category(nationality):\n","  if nationality == ' United-States':\n","    return 'American'\n","  else:\n","    return 'Imigrant'\n","\n","def race_category(race):\n","  if race == ' White':\n","    return 'White'\n","  else:\n","    return 'Non-White'\n","\n","adult = adult.drop(columns=['capital_gain', 'capital_loss', 'fnlwgt', 'education_level', 'relationship'])\n","\n","adult['age'] = adult['age'].apply(age_category)\n","adult['hours'] = adult['hours'].apply(hours_category)\n","adult['nationality'] = adult['nationality'].apply(nationality_category)\n","adult['race'] = adult['race'].apply(race_category)\n","\n","adult"],"metadata":{"id":"zfo1D18BOXzl","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1696987075963,"user_tz":180,"elapsed":22,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"4747b2d5-6699-4074-c56a-aca0e820db61"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          age          workclass    education       marital_status  \\\n","0       Adult          State-gov    Bachelors        Never-married   \n","1      Senior   Self-emp-not-inc    Bachelors   Married-civ-spouse   \n","2       Adult            Private      HS-grad             Divorced   \n","3      Senior            Private         11th   Married-civ-spouse   \n","4       Adult            Private    Bachelors   Married-civ-spouse   \n","...       ...                ...          ...                  ...   \n","32556   Adult            Private   Assoc-acdm   Married-civ-spouse   \n","32557   Adult            Private      HS-grad   Married-civ-spouse   \n","32558  Senior            Private      HS-grad              Widowed   \n","32559   Young            Private      HS-grad        Never-married   \n","32560  Senior       Self-emp-inc      HS-grad   Married-civ-spouse   \n","\n","               occupation       race      sex      hours nationality  income  \n","0            Adm-clerical      White     Male  Full-time    American   <=50K  \n","1         Exec-managerial      White     Male  Part-time    American   <=50K  \n","2       Handlers-cleaners      White     Male  Full-time    American   <=50K  \n","3       Handlers-cleaners  Non-White     Male  Full-time    American   <=50K  \n","4          Prof-specialty  Non-White   Female  Full-time    Imigrant   <=50K  \n","...                   ...        ...      ...        ...         ...     ...  \n","32556        Tech-support      White   Female  Full-time    American   <=50K  \n","32557   Machine-op-inspct      White     Male  Full-time    American    >50K  \n","32558        Adm-clerical      White   Female  Full-time    American   <=50K  \n","32559        Adm-clerical      White     Male  Part-time    American   <=50K  \n","32560     Exec-managerial      White   Female  Full-time    American    >50K  \n","\n","[32561 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-ced99ec8-68c2-4129-885c-8708cc1e6b55\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>marital_status</th>\n","      <th>occupation</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hours</th>\n","      <th>nationality</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adult</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>Full-time</td>\n","      <td>American</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Senior</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>Part-time</td>\n","      <td>American</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Adult</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>Full-time</td>\n","      <td>American</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Senior</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Non-White</td>\n","      <td>Male</td>\n","      <td>Full-time</td>\n","      <td>American</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Adult</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Non-White</td>\n","      <td>Female</td>\n","      <td>Full-time</td>\n","      <td>Imigrant</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>32556</th>\n","      <td>Adult</td>\n","      <td>Private</td>\n","      <td>Assoc-acdm</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>Full-time</td>\n","      <td>American</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>32557</th>\n","      <td>Adult</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>Full-time</td>\n","      <td>American</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>32558</th>\n","      <td>Senior</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>Full-time</td>\n","      <td>American</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>32559</th>\n","      <td>Young</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>Part-time</td>\n","      <td>American</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>32560</th>\n","      <td>Senior</td>\n","      <td>Self-emp-inc</td>\n","      <td>HS-grad</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>Full-time</td>\n","      <td>American</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>32561 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ced99ec8-68c2-4129-885c-8708cc1e6b55')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ced99ec8-68c2-4129-885c-8708cc1e6b55 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ced99ec8-68c2-4129-885c-8708cc1e6b55');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-08a86d8f-02fa-4601-b3b5-46f2d46231cf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08a86d8f-02fa-4601-b3b5-46f2d46231cf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-08a86d8f-02fa-4601-b3b5-46f2d46231cf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["Com essas transformações, temos uma base de dados mais concisa e propricia para a análise proposta, reduzindo os 15 atributos iniciais para 11 e removendo todos os atributos numéricos, já que esses possuem variança excessiva e poderiam gerar resultados inconsistentes e de dificil interpretação (e.g. alta renda esta relacionada a pessoas de 53, 54 e 57 anos, mas não as de 55 e 56).\n","\n","Por último, avisamos ao modelo que todos os dados remanecentes são categoricos, algo necessário para algumas bibliotecas de combinação usadas."],"metadata":{"id":"-KXPyiz5nDbF"}},{"cell_type":"code","source":["adult = adult.astype('category')"],"metadata":{"id":"o4CwQnZSx9Lo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##**4. Modeling (Modelagem)**"],"metadata":{"id":"AjlBKt3FKJhA"}},{"cell_type":"markdown","source":["Iremos implementar e comparar dois algoritimos de mineração de padrões frequentes: força bruta e apriori. Assim poderemos comparar suas performances na solução do problema.\n","\n","Para isso, iremos dividir os dados em dois grupos (renda alta e baixa), minerar os dados desejados em um dos grupos e usar o outro para validar os itemset minerados submetendo-os a um test final que não é facilmente modulavel como um problema de padrão frequente.\n","\n","Chamaremos de economicamente favorecidos os grupos, definidos pelo itemset minerados, que tiver alta renda representando 95% ou mais dos individuos. Usaremos um suporte minimo de 80 dentre a alta renda, já que isso representa cerca de 1% das pessoas de alta renda na amostra e não queremos amostras pequenas demais para serem significativas.\n","\n","Chamaremos tambem de economicamente desfavorecidos os grupos que apresentarem suporte minimo de 600, entre os de baixa renda, cerca de 2.5% dessa categoria, e que sua representação na renda alta representa menos de 0.1% de seu total."],"metadata":{"id":"yzcUNbTBoeEH"}},{"cell_type":"code","source":["def filter(columns, entries, data):\n","  filtered = data\n","  for c, e in zip(columns, entries):\n","    filtered = filtered[filtered[c] == e]\n","  return filtered"],"metadata":{"id":"x84BMwfzNoOl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def support(columns, entries, data):\n","  return filter(columns, entries, data).shape[0]"],"metadata":{"id":"1uUWPEXrNtCj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###Algoritmo Brute Force"],"metadata":{"id":"rrPGqkfSQ2Jr"}},{"cell_type":"code","source":["def brute_force(data, minsup):\n","  mined_sets = []\n","\n","  # First we remove the income column\n","  candidate_columns = data.columns\n","  candidate_columns = candidate_columns[:len(candidate_columns)-1]\n","\n","  # For each combination of columns\n","  for r in range(1, len(candidate_columns) + 1):\n","    column_combinations = list(combinations(candidate_columns, r))\n","    for columns in column_combinations:\n","\n","      # Get the entry combinations for the selected columns\n","      entries = data[list(columns)].drop_duplicates().values.tolist()\n","\n","      # For each entry, test support\n","      for entry in entries:\n","        sup = support(columns, entry, data)\n","        if sup >= minsup:\n","          mined_sets.append((entry, sup))\n","\n","  return mined_sets"],"metadata":{"id":"P_YEjbzyOXC9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Algoritmo Apriori"],"metadata":{"id":"Z-UbGor8Q7oV"}},{"cell_type":"code","source":["def node_expansion(columns, entry, data):\n","  # First we remove the income column\n","  candidate_columns = data.columns\n","  candidate_columns = candidate_columns[:len(candidate_columns)-1]\n","\n","  # Than we avoid expanding identical nodes by only adding columns after\n","  # the last column added\n","  k = 0\n","  while candidate_columns[k] != columns[-1]:\n","    k += 1\n","  candidate_columns = candidate_columns[k+1:]\n","\n","  # Now we add the combination of entries and columns to the\n","  expansion = []\n","  for column in candidate_columns:\n","    entries = data[column].drop_duplicates().values.tolist()\n","    for new_entry in entries:\n","      expansion.append((columns + [column], entry + [new_entry]))\n","\n","  return expansion"],"metadata":{"id":"IihykiaqGZ6S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def apriori(data, minsup):\n","  mined_sets = []\n","\n","  # Tree nodes are of format (columns, entry)\n","  # Generating initil tree\n","  tree = []\n","  columns = data.columns[:len(data.columns)-1]\n","  for column in columns:\n","    entries = data[column].drop_duplicates().values.tolist()\n","    for entry in entries:\n","      tree.append(([column], [entry]))\n","\n","  # By appending expasions at the end, we only need to continueously pop\n","  # the first element to peform a breadth-first search\n","  while tree:\n","    columns, entry = tree.pop(0)\n","    sup = support(columns, entry, data)\n","    if sup >= minsup:\n","      mined_sets.append((columns, entry, sup))\n","      tree += node_expansion(columns, entry, data)\n","\n","  return mined_sets"],"metadata":{"id":"dcsW8bFRJW5r"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##**5. Evaluation (Validação)**\n"],"metadata":{"id":"F1UAOjMXMfrg"}},{"cell_type":"markdown","source":["Primeiro, separaremos os dois grupos, alta e baixa renda, como propomos na modelagem. Ambos os algoritmos implementados devem nos dar os mesmos sets, mas tomando tempos diferentes"],"metadata":{"id":"4MRW8YxOedJu"}},{"cell_type":"code","source":["high_income = filter(['income'], [' >50K'], adult)\n","low_income = filter(['income'], [' <=50K'], adult)"],"metadata":{"id":"vBS3k9JIecn1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Grupos Economicamente Favorecidos"],"metadata":{"id":"Ij7yvHGzTvUh"}},{"cell_type":"markdown","source":["Rodando o algoritmo de força bruta. A adição de impressão do numero de colunas sendo analisado num dado momento é simplesmente uma forma verificar o progresso, dado que o tempo de execução é muito alto."],"metadata":{"id":"eaAeWnK-fqY0"}},{"cell_type":"code","source":["%%timeit -r 1 -t 1\n","high_income_sets = brute_force(high_income, 80)"],"metadata":{"id":"g37UqSQCOWX8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696988899992,"user_tz":180,"elapsed":1824039,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"38212b4c-eb3f-4ae2-ac00-c4c734416a94"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["15min 2s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n"]}]},{"cell_type":"markdown","source":["Agora rodaremos o algoritmo apriori"],"metadata":{"id":"hNqyTdwmfxmp"}},{"cell_type":"code","source":["%%timeit\n","high_income_sets = apriori(high_income, 80)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VkrjUleTf1hA","executionInfo":{"status":"ok","timestamp":1696989412339,"user_tz":180,"elapsed":512378,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"719d9d84-af61-452c-bec5-bd38b9ae1895"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1min 4s ± 506 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n"]}]},{"cell_type":"markdown","source":["Agora iremos iterar sobre os sets, para encontrars os grupos que tendem a serem de alta renda"],"metadata":{"id":"IrRMWTp2iE-5"}},{"cell_type":"code","source":["high_income_sets = apriori(high_income, 80)\n","high_income_groups = []\n","\n","for h in high_income_sets:\n","  total_sup = support(h[0], h[1], adult)\n","  rsup = h[2] / total_sup\n","  if  rsup >= 0.95 :\n","    high_income_groups.append((h[1], total_sup, rsup))"],"metadata":{"id":"lTENABx9jCA4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(len(high_income_groups), 'grupos de alta renda')\n","for i in high_income_groups:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FWLyggLCkoOa","executionInfo":{"status":"ok","timestamp":1696989505414,"user_tz":180,"elapsed":41,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"0d2da4b0-5200-4da0-8819-3cdad491eb49"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["15 grupos de alta renda\n","([' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', 'Over-time'], 133, 0.9624060150375939)\n","([' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', ' Male', 'Over-time'], 134, 0.9552238805970149)\n","([' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'Over-time', 'American'], 123, 0.967479674796748)\n","(['Adult', ' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', 'Over-time'], 95, 0.9578947368421052)\n","(['Adult', ' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'Over-time', 'American'], 86, 0.9651162790697675)\n","([' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', ' Male', 'Over-time'], 128, 0.96875)\n","([' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', 'Over-time', 'American'], 120, 0.975)\n","([' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', ' Male', 'Over-time', 'American'], 118, 0.9745762711864406)\n","([' Private', ' Masters', ' Exec-managerial', 'White', ' Male', 'Over-time', 'American'], 138, 0.9565217391304348)\n","(['Adult', ' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', ' Male', 'Over-time'], 93, 0.956989247311828)\n","(['Adult', ' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', 'Over-time', 'American'], 84, 0.9761904761904762)\n","(['Adult', ' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', ' Male', 'Over-time', 'American'], 84, 0.9642857142857143)\n","(['Adult', ' Private', ' Masters', ' Exec-managerial', 'White', ' Male', 'Over-time', 'American'], 100, 0.95)\n","([' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', ' Male', 'Over-time', 'American'], 115, 0.9826086956521739)\n","(['Adult', ' Private', ' Masters', ' Married-civ-spouse', ' Exec-managerial', 'White', ' Male', 'Over-time', 'American'], 82, 0.975609756097561)\n"]}]},{"cell_type":"markdown","source":["Com isso encontramos alguns resultados interessantes.\n","\n","Primeiramente, notamos que os padrões encontrados compartilham serem casados, com mestrados, posições executivas no setor privado e fazendo horas extras. E segundo, notamos que além disso é necessário tambem ser branco, homem ou americano. Isso indica um desfavorecimento relativo a não brancos, mulheres e americanos, dado que essas categorias são binárias e o superset que englobaria ambas as opções não compre os requisitos, indicando que brancos, mulheres ou americanos possuem valores abaixo de 95% de incidencia de alta renda, abaixando o suporte relativo do superset, nas mesmas condições mencionadas.\n","\n","Observando támbem a interseção de elementos entre supersets e subsets, notamos que homens brancos e americanos estão superrepresentados em relação sua proporção na amostra como um todo, que já é enviesada a favor desses grupos por se tratar de pessoas economicamente ativas nos Estados Unidos em 1994"],"metadata":{"id":"fx84F6Zw-KNq"}},{"cell_type":"markdown","source":["### Grupos Economicamente Desfavorecidos"],"metadata":{"id":"ZIbMou3lvxEX"}},{"cell_type":"markdown","source":["Desta vez, rodaremos apenas o algoritmo apriori, já que ja demonstramos abundantemente que soluções de força bruta são muito custosa"],"metadata":{"id":"2pAUUGPqv9PO"}},{"cell_type":"code","source":["low_income_sets = apriori(low_income, 600)\n","low_income_groups = []\n","\n","for l in low_income_sets:\n","  total_sup = support(l[0], l[1], adult)\n","  rsup = l[2] / total_sup\n","  if  rsup >= 0.999 :\n","    low_income_groups.append((l[1], total_sup, rsup))"],"metadata":{"id":"8qaBXU_5wYIV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(len(low_income_groups), 'grupos de baixa renda')\n","for i in low_income_groups:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c2fMUs0fwYRC","executionInfo":{"status":"ok","timestamp":1696989542368,"user_tz":180,"elapsed":39,"user":{"displayName":"Luiz Paulo Santos Ribeiro","userId":"08815582276668123883"}},"outputId":"07125541-42dd-404f-a0f9-e2c19024e15a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["44 grupos de baixa renda\n","(['Young', 'White', 'Part-time'], 2033, 0.9990162321692081)\n","(['Young', ' Female', 'Part-time'], 1286, 1.0)\n","([' HS-grad', ' Never-married', 'Part-time'], 613, 1.0)\n","([' Never-married', ' Handlers-cleaners', 'American'], 625, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married'], 1148, 1.0)\n","(['Young', ' Private', ' Never-married', ' Sales'], 734, 1.0)\n","(['Young', ' Private', ' Female', 'Part-time'], 1002, 1.0)\n","(['Young', ' HS-grad', ' Never-married', 'White'], 1125, 0.9991111111111111)\n","(['Young', ' HS-grad', ' Never-married', 'American'], 1242, 0.999194847020934)\n","(['Young', ' Never-married', ' Sales', 'White'], 641, 1.0)\n","(['Young', ' Never-married', ' Female', 'Part-time'], 1223, 1.0)\n","(['Young', 'White', ' Female', 'Part-time'], 1106, 1.0)\n","(['Young', ' Female', 'Part-time', 'American'], 1211, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married', 'White'], 980, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married', ' Male'], 685, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married', 'Full-time'], 679, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married', 'American'], 1065, 1.0)\n","(['Young', ' Private', ' Some-college', ' Never-married', 'White'], 1173, 0.9991474850809889)\n","(['Young', ' Private', ' Never-married', ' Sales', 'White'], 626, 1.0)\n","(['Young', ' Private', ' Never-married', ' Sales', 'American'], 680, 1.0)\n","(['Young', ' Private', ' Never-married', ' Female', 'Part-time'], 954, 1.0)\n","(['Young', ' Private', 'White', ' Female', 'Part-time'], 871, 1.0)\n","(['Young', ' Private', ' Female', 'Part-time', 'American'], 948, 1.0)\n","(['Young', ' HS-grad', ' Never-married', 'White', ' Male'], 671, 1.0)\n","(['Young', ' HS-grad', ' Never-married', 'White', 'American'], 1056, 1.0)\n","(['Young', ' HS-grad', ' Never-married', 'Full-time', 'American'], 713, 1.0)\n","(['Young', ' Some-college', ' Never-married', 'White', ' Female'], 822, 1.0)\n","(['Young', ' Never-married', ' Sales', 'White', 'American'], 611, 1.0)\n","(['Young', ' Never-married', 'White', ' Female', 'Part-time'], 1058, 1.0)\n","(['Young', ' Never-married', ' Female', 'Part-time', 'American'], 1157, 1.0)\n","(['Young', 'White', ' Female', 'Part-time', 'American'], 1067, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married', 'White', 'American'], 921, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married', ' Male', 'American'], 634, 1.0)\n","(['Young', ' Private', ' HS-grad', ' Never-married', 'Full-time', 'American'], 622, 1.0)\n","(['Young', ' Private', ' Some-college', ' Never-married', 'White', ' Female'], 603, 1.0)\n","(['Young', ' Private', ' Some-college', ' Never-married', 'White', 'American'], 1108, 0.9990974729241877)\n","(['Young', ' Private', ' Never-married', 'White', ' Female', 'Part-time'], 833, 1.0)\n","(['Young', ' Private', ' Never-married', ' Female', 'Part-time', 'American'], 907, 1.0)\n","(['Young', ' Private', 'White', ' Female', 'Part-time', 'American'], 843, 1.0)\n","(['Young', ' HS-grad', ' Never-married', 'White', ' Male', 'American'], 626, 1.0)\n","(['Young', ' HS-grad', ' Never-married', 'White', 'Full-time', 'American'], 605, 1.0)\n","(['Young', ' Some-college', ' Never-married', 'White', ' Female', 'American'], 779, 1.0)\n","(['Young', ' Never-married', 'White', ' Female', 'Part-time', 'American'], 1022, 1.0)\n","(['Young', ' Private', ' Never-married', 'White', ' Female', 'Part-time', 'American'], 807, 1.0)\n"]}]},{"cell_type":"markdown","source":["Desta vez, vemos muito mais resultados, o que é compatível com o esperado (há menos pessoas ganhando consideravelmente acima da média).\n","\n","A primeira observação é que predominam os supersets de jovens e dos que trabalham em meio periodo. Além disso, mulheres estão super representadas aqui, apesar de subrepresentadas na base de dados como um todo. Outras analises parecem estar de acordo com a população da amostra (maioria branca e americana), ou com premissas implicitas à idade (jovens são o grupo menos provavel de já terem sido casados)"],"metadata":{"id":"5daZtAAtvVtF"}}]}